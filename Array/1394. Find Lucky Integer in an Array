https://leetcode.com/problems/find-lucky-integer-in-an-array/

Problem:
1394. Find Lucky Integer in an Array
Easy

Given an array of integers arr, a lucky integer is an integer which has a frequency in the array equal to its value.

Return a lucky integer in the array. If there are multiple lucky integers return the largest of them. If there is no lucky integer return -1.

 

Example 1:

Input: arr = [2,2,3,4]
Output: 2
Explanation: The only lucky number in the array is 2 because frequency[2] == 2.

Example 2:

Input: arr = [1,2,2,3,3,3]
Output: 3
Explanation: 1, 2 and 3 are all lucky numbers, return the largest of them.

Example 3:

Input: arr = [2,2,2,3,3]
Output: -1
Explanation: There are no lucky numbers in the array.

Example 4:

Input: arr = [5]
Output: -1

Example 5:

Input: arr = [7,7,7,7,7,7,7]
Output: 7

 

Constraints:

    1 <= arr.length <= 500
    1 <= arr[i] <= 500


******************We can solve this type of problem by statistics approach************
**************However this method is not for leetcode submission****************************
arr = [2,2,3,4]

set_arr = set(arr)

m_arr=[i for i in set_arr]

rever_m_arr = m_arr[::-1]

print(rever_m_arr)

from collections import Counter

frequency = Counter(arr)

print(frequency)

for i in rever_m_arr:
    if(frequency[i]==i):
        print(i)
        break
        
 Solution for leetcode:
 ******************************************************************************************************************************************
 class Solution:
    def findLucky(self, arr: List[int]) -> int:
        output=[]
        for i in set(arr):
            c=0
            for j in range(0,len(arr)):
                if(i==arr[j]):
                    c=c+1
            if(c==i):
                output.append(i)
        if(len(output)==0):
            return -1
        else:
            return max(output)
                
            
        
 
 
