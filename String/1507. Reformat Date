https://leetcode.com/problems/reformat-date/

Problem:

1507. Reformat Date
Easy

Given a date string in the form Day Month Year, where:

    Day is in the set {"1st", "2nd", "3rd", "4th", ..., "30th", "31st"}.
    Month is in the set {"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"}.
    Year is in the range [1900, 2100].

Convert the date string to the format YYYY-MM-DD, where:

    YYYY denotes the 4 digit year.
    MM denotes the 2 digit month.
    DD denotes the 2 digit day.

 

Example 1:

Input: date = "20th Oct 2052"
Output: "2052-10-20"

Example 2:

Input: date = "6th Jun 1933"
Output: "1933-06-06"

Example 3:

Input: date = "26th May 1960"
Output: "1960-05-26"

 

Constraints:

    The given dates are guaranteed to be valid, so no error handling is necessary.



Solution:
***********************************************************************************************************************************
class Solution:
    def reformatDate(self, date: str) -> str:
        lst=date.split()
        #print(lst)
        month=("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov","Dec")
        
        dic_mon={}
        j=1
        for i in month:
            dic_mon[i]=j
            j=j+1
        #print(dic_mon)
        DD=lst[0]
        if('th' in lst[0]):
            DD=lst[0].strip('th')
        if('nd' in lst[0]):
            DD=lst[0].strip('nd')
        if('rd' in lst[0]):
            DD=lst[0].strip('rd')
        if('st' in lst[0]):
            DD=lst[0].strip('st')
        #print(DD)
        MM=dic_mon[lst[1]]
        #print(MM)
        YYYY=lst[2]
        #print(YYYY)
        if(len(str(DD))==1):
            DD="0"+str(DD)
        if(len(str(MM))==1):
            MM="0"+str(MM)
        output=""
        output=output+str(YYYY)+"-"+str(MM)+"-"+str(DD)
        return output
        








