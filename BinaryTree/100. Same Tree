https://leetcode.com/problems/same-tree/submissions/

Given the roots of two binary trees p and q, write a function to check if they are the same or not.

Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.

 

Example 1:


Input: p = [1,2,3], q = [1,2,3]
Output: true
Example 2:


Input: p = [1,2], q = [1,null,2]
Output: false
Example 3:


Input: p = [1,2,1], q = [1,1,2]
Output: false

----------------------------------------------------------------------------------------------------------------------------------------
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:
        if(p==None and q==None):
            return True
        elif(p==None or q==None):
            return False
        else:
            return (p.val==q.val) and self.isSameTree(p.left, q.left) and self.isSameTree(p.right, q.right)
        
            
-------------------------------------------------------------------------------------------------------------------------------------------
Success
Details 
Runtime: 24 ms, faster than 95.61% of Python3 online submissions for Same Tree.
Memory Usage: 14.3 MB, less than 62.71% of Python3 online submissions for Same Tree.
